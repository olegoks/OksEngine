BehaviourNamespace = {
    
    ScriptNameComponent = {
        fields = {
            { type = "std::string", name = "name" }
        }
    },

    ObjectNameComponent = {
        fields = {
            { type = "std::string", name = "name" }
        }
    },
    
    LuaScriptComponent = {
        serializable = false,
        fields = {
            { type="std::string", name="text" }
        }
    },

    CreateLuaScriptSystem = {
        updateMethod = {
            processesEntities = {
                {
                    processesComponents = {
                        { name = "ResourceSystem", readonly = false }
                    }
                },
                {
                    processesComponents = {
                        "ScriptName"
                    },
                    createsComponents = {
                        "LuaScript"
                    },
                    excludes = {
                        "LuaScript"
                    }
                }
            }
        }
    },

    LuaContextComponent = {
        serializable = false,
        fields = {
            { type = "std::shared_ptr<::Lua::Context>",  name="context"}
        }
    },

    CreateLuaContextSystem = {
        updateMethod = {
            processesEntities = {
                {
                    processesComponents = {
                        "ScriptName",
                        "ObjectName",
                        "LuaScript"
                    },
                    createsComponents = {
                        "LuaContext"
                    },
                    excludes = {
                        "LuaContext"
                    }
                }
            }
        }
    },

    CallKeyboardEventsProcessorSystem = {
        callOrder = {
            runAfter = "Input::SendWindowKeyboardEvents",
            runBefore = "Input::ClearKeyboardEvents"
        },
        updateMethod = {
            processesEntities = {
                {
                    processesComponents = {
                        "ScriptName",
                        "ObjectName",
                        { name = "LuaContext",    readonly = false },
                        { name = "Input::KeyboardEvents", readonly = false },
                        "Input::KeyMappings"
                        -- { name = "MouseEvents",    readonly = false }
                    }
                }
            }
        }
    },

    CallCursorEventsProcessorSystem = {
        callOrder = {
            runAfter = "SendWindowCursorEvents",
            runBefore = "ClearCursorEvents"
        },
        updateMethod = {
            processesEntities = {
                {
                    processesComponents = {
                        "ScriptName",
                        "ObjectName",
                        { name = "LuaContext",    readonly = false },
                        { name = "CursorEvents", readonly = false },
                        -- { name = "MouseEvents",    readonly = false }
                    }
                }
            }
        }
    },

    CallMouseEventsProcessorSystem = {
        callOrder = {
            runAfter = "SendWindowMouseEvents",
            runBefore = "ClearMouseEvents"
        },
        updateMethod = {
            processesEntities = {
                {
                    processesComponents = {
                        "ScriptName",
                        "ObjectName",
                        { name = "LuaContext",    readonly = false },
                        { name = "MouseEvents", readonly = false },
                        -- { name = "MouseEvents",    readonly = false }
                    }
                }
            }
        }
    },


    CallUpdateMethodSystem = {
        updateMethod = {
            processesEntities = {
                {
                    processesComponents = {
                        "ScriptName",
                        "ObjectName",
                        { name = "LuaContext", readonly = false }
                    }
                }
            }
        }
    }

}
