
ClockComponent = {
    serializable = false,
}

PauseClockComponent = {
    serializable = false
}

EngineStartTimePointComponent = {
    serializable = false,
    fields = { 
        { type = "std::chrono::high_resolution_clock::time_point", name = "timepoint" }
    }
}

TimeSinceEngineStartComponent = {
    serializable = false,
    fields = { 
        { type = "Common::UInt64", name = "microseconds" }
    }
}

TimeSinceEpochComponent = {
    serializable = false,
    fields = { 
        { type = "Common::UInt64", name = "microseconds" }
    }
}

CreateClockEntitySystem = {
    type = "Initialize",
    updateMethod = {
        createsEntities = {
            {
                createsComponents = {
                    "Name",
                    "Clock",
                    "TimeSinceEpoch",
                    "TimeSinceEngineStart",
                    "EngineStartTimePoint"
                }
            }
        }
    }
}

UpdateTimeSinceEpochSystem = {
    updateMethod = {
        processesEntities = {
            {
                processesComponents = { 
                    { name = "TimeSinceEpoch", readonly = false }
                },
                excludes = {
                    "PauseClock"
                }
            }
        }
    }
}

UpdateTimeSinceEngineStartSystem = {
    updateMethod = {
        processesEntities = {
            {
                processesComponents = { 
                    { name = "TimeSinceEngineStart", readonly = false },
                    "EngineStartTimePoint"
                },
                excludes = {
                    "PauseClock"
                }
            }
        }
    }
}
